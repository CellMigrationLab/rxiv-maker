name: 'Retry Action'
description: 'Execute a command with exponential backoff retry logic'
inputs:
  command:
    description: 'Command to execute'
    required: true
  max-attempts:
    description: 'Maximum number of attempts'
    required: false
    default: '3'
  retry-delay:
    description: 'Initial retry delay in seconds'
    required: false
    default: '5'
  shell:
    description: 'Shell to use (bash or powershell)'
    required: false
    default: 'bash'

runs:
  using: 'composite'
  steps:
    - name: Execute with retry
      shell: ${{ inputs.shell }}
      run: |
        if [ "${{ inputs.shell }}" = "bash" ]; then
          # Bash retry logic
          attempt=1
          max_attempts=${{ inputs.max-attempts }}
          delay=${{ inputs.retry-delay }}

          while [ $attempt -le $max_attempts ]; do
            echo "üîÑ Attempt $attempt of $max_attempts..."

            if eval "${{ inputs.command }}"; then
              echo "‚úÖ Command succeeded on attempt $attempt"
              exit 0
            else
              exit_code=$?
              echo "‚ùå Command failed with exit code $exit_code"

              if [ $attempt -lt $max_attempts ]; then
                echo "‚è≥ Waiting ${delay}s before retry..."
                sleep $delay
                # Exponential backoff
                delay=$((delay * 2))
              else
                echo "‚ùå All attempts failed"
                exit $exit_code
              fi
            fi

            attempt=$((attempt + 1))
          done
        else
          # PowerShell retry logic
          $attempt = 1
          $maxAttempts = ${{ inputs.max-attempts }}
          $delay = ${{ inputs.retry-delay }}

          while ($attempt -le $maxAttempts) {
            Write-Host "üîÑ Attempt $attempt of $maxAttempts..."

            try {
              Invoke-Expression "${{ inputs.command }}"
              Write-Host "‚úÖ Command succeeded on attempt $attempt"
              exit 0
            } catch {
              $exitCode = $LASTEXITCODE
              if ($exitCode -eq 0) { $exitCode = 1 }
              Write-Host "‚ùå Command failed: $_"

              if ($attempt -lt $maxAttempts) {
                Write-Host "‚è≥ Waiting ${delay}s before retry..."
                Start-Sleep -Seconds $delay
                # Exponential backoff
                $delay = $delay * 2
              } else {
                Write-Host "‚ùå All attempts failed"
                exit $exitCode
              }
            }

            $attempt++
          }
        fi
