name: CI

on:
  pull_request:
    branches: [main, dev]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml'
      - '.pre-commit-config.yaml'

# Minimal permissions by default
permissions:
  contents: read

# Cancel previous runs on same PR
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1
  UV_SYSTEM_PYTHON: 1
  PYTHONIOENCODING: utf-8

jobs:
  # Single job for all checks - simpler and faster
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for pre-commit

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 'latest'
          enable-cache: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ci-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ci-${{ runner.os }}-

      - name: Install dependencies
        run: |
          uv sync --frozen
          uv pip install nox

      - name: Cache nox environments
        uses: actions/cache@v4
        with:
          path: .nox
          key: nox-${{ runner.os }}-${{ hashFiles('noxfile.py', 'pyproject.toml') }}
          restore-keys: |
            nox-${{ runner.os }}-

      - name: Run linting
        run: |
          echo "🔍 Running linting checks..."
          nox -s lint
          echo "✅ Linting checks passed"

      - name: Run tests
        run: |
          echo "🧪 Running tests..."
          nox -s test
          echo "✅ Tests passed"

      - name: Check package build
        run: |
          echo "📦 Building and validating package..."
          nox -s build
          echo "✅ Package builds and validates successfully"

      - name: Summary
        if: always()
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ **All checks passed**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Checks failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Run these commands locally to debug:" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "nox -s lint    # Run linting checks" >> $GITHUB_STEP_SUMMARY
            echo "nox -s test    # Run tests" >> $GITHUB_STEP_SUMMARY
            echo "nox -s build   # Build and validate package" >> $GITHUB_STEP_SUMMARY
            echo "nox -s test_fast  # Quick development feedback" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
