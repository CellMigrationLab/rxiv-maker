name: Test Cross-Platform Setup

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

jobs:
  test-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: Linux
          - os: windows-latest
            platform: Windows
          - os: macos-latest
            platform: macOS

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Make (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install make

    - name: Install Make (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Make is pre-installed on macOS runners
        which make

    - name: Install Make (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Make is pre-installed on Ubuntu runners
        which make

    - name: Install LaTeX (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-recommended texlive-fonts-recommended

    - name: Install LaTeX (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Install BasicTeX (lighter version of MacTeX)
        brew install --cask basictex
        # Add to PATH
        echo "/Library/TeX/texbin" >> $GITHUB_PATH
        # Wait for installation to complete
        sleep 10

    - name: Install LaTeX (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Install MiKTeX
        choco install miktex --no-progress
        # Refresh PATH
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        # Wait for installation to complete
        Start-Sleep 10

    - name: Install Node.js (for Mermaid)
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Mermaid CLI
      run: npm install -g @mermaid-js/mermaid-cli


    - name: Debug - Show platform info
      if: ${{ github.event.inputs.debug_enabled == 'true' }}
      run: |
        echo "Platform: ${{ matrix.platform }}"
        echo "OS: ${{ matrix.os }}"
        echo "Working directory: $(pwd)"
        ls -la

    - name: Test make setup
      run: make setup

    - name: Verify virtual environment creation
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          if [ -f ".venv/Scripts/python.exe" ]; then
            echo "✓ Virtual environment created successfully on Windows"
          else
            echo "✗ Virtual environment not found on Windows"
            exit 1
          fi
        else
          if [ -f ".venv/bin/python" ]; then
            echo "✓ Virtual environment created successfully on ${{ matrix.platform }}"
          else
            echo "✗ Virtual environment not found on ${{ matrix.platform }}"
            exit 1
          fi
        fi

    - name: Test make pdf with EXAMPLE_MANUSCRIPT
      run: make pdf MANUSCRIPT_PATH=EXAMPLE_MANUSCRIPT

    - name: Verify PDF generation
      shell: bash
      run: |
        if [ -f "output/EXAMPLE_MANUSCRIPT.pdf" ]; then
          echo "✓ PDF generated successfully"
          ls -la output/EXAMPLE_MANUSCRIPT.pdf
        else
          echo "✗ PDF not generated"
          echo "Contents of output directory:"
          ls -la output/ || echo "Output directory not found"
          exit 1
        fi

    - name: Check output directory structure
      shell: bash
      run: |
        echo "Output directory contents:"
        ls -la output/ || echo "Output directory not found"
        echo "Generated files:"
        find output/ -type f -name "*.pdf" -o -name "*.tex" -o -name "*.log" 2>/dev/null || echo "No output files found"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: output-${{ matrix.platform }}
        path: |
          output/
          .venv/
        retention-days: 1

    - name: Test cleanup
      if: always()
      run: make clean