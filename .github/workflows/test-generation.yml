name: Test Article Generation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test LaTeX generation
      run: |
        python src/tex/py/generate_article.py --output-dir test-output
        
    - name: Verify generated files
      run: |
        test -f test-output/ARTICLE.tex || exit 1
        test -f test-output/HenriquesLab_style.cls || exit 1
        test -f test-output/HenriquesLab_style.bst || exit 1
        echo "All required files generated successfully"
        
    - name: Check LaTeX syntax
      run: |
        cd test-output
        # Basic syntax check - try to compile without full PDF generation
        echo "\\nonstopmode\\input{ARTICLE.tex}" | timeout 30 pdflatex -interaction=nonstopmode || true
        # Check if basic LaTeX structure is valid
        grep -q "\\documentclass" ARTICLE.tex
        grep -q "\\begin{document}" ARTICLE.tex  
        grep -q "\\end{document}" ARTICLE.tex
        echo "LaTeX syntax validation passed"
        
    - name: Upload generated LaTeX as artifact
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'
      with:
        name: generated-latex-python-${{ matrix.python-version }}
        path: test-output/
        retention-days: 7
