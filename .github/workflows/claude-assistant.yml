name: Claude Assistant

on:
  # Automated code review triggers
  pull_request:
    types: [opened, synchronize]

  # Interactive assistant triggers
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  # Job 1: Automated code review on PR events
  automated-review:
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Changed from read to write for posting comments
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly use GITHUB_TOKEN

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true

          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

  # Job 2: Interactive assistant responding to @claude mentions
  interactive-assistant:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude') && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude') && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude') && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')) && github.actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Changed from read to write for posting comments
      issues: write         # Changed from read to write for posting comments
      id-token: write
      actions: read # Required for Claude to read CI results on PRs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly use GITHUB_TOKEN

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"

          # Optional: Add custom instructions for Claude to customize its behavior for your project
          # custom_instructions: |
          #   Follow our coding standards
          #   Ensure all new code has tests
          #   Use TypeScript for new files

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

  # Job 3: Limited review for Dependabot PRs (no write permissions needed)
  dependabot-review:
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Dependabot PR Analysis
        run: |
          echo "::notice::Dependabot PR detected - automated security review"
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "PR Author: ${{ github.actor }}"
          echo "Changed files:"
          gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files --jq '.[] | .filename' || echo "Could not fetch file list"

          # Basic validation for Dependabot PRs
          if [[ "${{ github.event.pull_request.title }}" == *"security"* ]]; then
            echo "::warning::This appears to be a security update - review recommended"
          fi

          echo "::notice::Dependabot PRs are automatically reviewed for basic safety"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
