name: Sync Docker Version

on:
  push:
    branches: [ main, dev-no-puppets ]
    paths:
      - 'src/rxiv_maker/__version__.py'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild Docker images even if version unchanged'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  actions: write

env:
  PYTHONIOENCODING: utf-8

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      version_changed: ${{ steps.check-change.outputs.changed }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need at least 2 commits to compare

    - name: Get current version
      id: get-version
      run: |
        VERSION=$(python3 -c "
        import sys
        sys.path.insert(0, 'src')
        from rxiv_maker.__version__ import __version__
        print(__version__)
        ")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION"

    - name: Check if version changed
      id: check-change
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force_build }}" = "true" ]; then
          echo "Force build requested"
          echo "changed=true" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Check if version file changed in this push
        if git diff --name-only HEAD~1 HEAD | grep -q "src/rxiv_maker/__version__.py"; then
          echo "Version file changed"
          # Get previous version if possible
          PREV_VERSION=$(git show HEAD~1:src/rxiv_maker/__version__.py | python3 -c "
          import sys
          exec(sys.stdin.read())
          print(__version__)
          " 2>/dev/null || echo "unknown")

          CURRENT_VERSION="${{ steps.get-version.outputs.version }}"

          echo "Previous version: $PREV_VERSION"
          echo "Current version: $CURRENT_VERSION"

          if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version file changed but version is the same"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "Version file not changed"
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

  trigger-docker-builds:
    needs: check-version-change
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: needs.check-version-change.outputs.version_changed == 'true'

    steps:
    - name: Trigger local Docker build
      uses: actions/github-script@v7
      with:
        script: |
          console.log(`Triggering local Docker image build for version ${{ needs.check-version-change.outputs.version }}`);

          const result = await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'build-docker-base.yml',
            ref: 'main',
            inputs: {
              rxiv_version: '${{ needs.check-version-change.outputs.version }}',
              tag: 'v${{ needs.check-version-change.outputs.version }}',
              platforms: 'linux/amd64,linux/arm64'
            }
          });

          console.log('✅ Successfully triggered local Docker image build');
          console.log(`Workflow dispatch ID: ${result.data.id || 'N/A'}`);

          return {
            success: true,
            version: '${{ needs.check-version-change.outputs.version }}'
          };

    - name: Wait for Docker build to start
      run: |
        echo "Waiting 30 seconds for Docker build to initialize..."
        sleep 30

    - name: Verify Docker image availability
      run: |
        echo "Checking if Docker image will be available..."
        EXPECTED_IMAGE="henriqueslab/rxiv-maker-base:v${{ needs.check-version-change.outputs.version }}"
        echo "Expected image: $EXPECTED_IMAGE"

        # This is informational - the actual availability will be checked by the build workflow
        echo "Note: Image build may take 10-15 minutes to complete"
        echo "Monitor build progress at: https://github.com/${{ github.repository }}/actions"

    - name: Summary
      run: |
        echo "## Docker Version Sync Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ needs.check-version-change.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Action**: Triggered local Docker image build" >> $GITHUB_STEP_SUMMARY
        echo "- **Expected Image**: henriqueslab/rxiv-maker-base:v${{ needs.check-version-change.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Build triggered successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Monitor Docker build at [repository actions](https://github.com/${{ github.repository }}/actions)" >> $GITHUB_STEP_SUMMARY
        echo "2. Once complete, future PDF builds will use the new versioned image" >> $GITHUB_STEP_SUMMARY

  skip-notification:
    needs: check-version-change
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: needs.check-version-change.outputs.version_changed == 'false'

    steps:
    - name: No action needed
      run: |
        echo "No version change detected"
        echo "Current version: ${{ needs.check-version-change.outputs.version }}"
        echo "No Docker build triggered"
